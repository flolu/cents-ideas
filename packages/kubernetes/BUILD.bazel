# TODO make k8s work again (also with new config)

load("@k8s_deploy//:defaults.bzl", "k8s_deploy")
load("@microk8s_deploy//:defaults.bzl", "microk8s_deploy")
load("@io_bazel_rules_k8s//k8s:objects.bzl", "k8s_objects")

package(default_visibility = ["//visibility:public"])

k8s_deploy(
    name = "kafka",
    template = ":kafka.yaml",
)

k8s_deploy(
    name = "certificate_issuer",
    template = ":certificate-issuer.yaml",
)

k8s_deploy(
    name = "database_storage",
    template = ":database-storage.yaml",
)

k8s_deploy(
    name = "config",
    template = ":config.yaml",
)

k8s_deploy(
    name = "secret",
    template = ":secret.yaml",
)

k8s_deploy(
    name = "ingress",
    template = ":ingress.yaml",
)

k8s_objects(
    name = "defaults",
    objects = [
        ":kafka",
        ":certificate_issuer",
        ":database_storage",
        ":config",
        ":secret",
        ":ingress",
    ],
)

microk8s_deploy(
    name = "microk8s_kafka",
    template = ":kafka.yaml",
)

microk8s_deploy(
    name = "microk8s_config",
    template = ":config.yaml",
)

microk8s_deploy(
    name = "microk8s_secret",
    template = ":secret.yaml",
)

microk8s_deploy(
    name = "microk8s_database_storage",
    template = ":local-database-storage.yaml",
)

microk8s_deploy(
    name = "microk8s_ingress",
    template = ":local-ingress.yaml",
)

k8s_objects(
    name = "microk8s_defaults",
    objects = [
        ":microk8s_kafka",
        ":microk8s_config",
        ":microk8s_secret",
        ":microk8s_database_storage",
        ":microk8s_ingress",
    ],
)
