// TODO try to auto-generate proto files https://github.com/protobufjs/protobuf.js#using-decorators

import "google/protobuf/empty.proto";
import "google/protobuf/any.proto";

syntax = "proto3";

package idea;

service IdeaCommands {
  rpc create(CreateIdea) returns (IdeaCreated);
  rpc rename(RenameIdea) returns (google.protobuf.Empty);
  rpc editDescription(EditIdeaDescription) returns (google.protobuf.Empty);
  rpc updateTags(UpdateIdeaTags) returns (google.protobuf.Empty);
  rpc publish(PublishIdea) returns (google.protobuf.Empty);
  rpc delete(DeleteIdea) returns (google.protobuf.Empty);
}

service IdeaDetails {
  rpc getById(GetIdeaById) returns (IdeaWithDetails);
}

service IdeaEventStore {
  rpc getEvents(GetEvents) returns (IdeaEvents);
}

message CreateIdea {
  string userId = 1;
}
message IdeaCreated {
  string id = 1;
}

message RenameIdea {
  string id = 1;
  string userId = 2;
  string title = 3;
}

message EditIdeaDescription {
  string id = 1;
  string userId = 2;
  string description = 3;
}

message UpdateIdeaTags {
  string id = 1;
  string userId = 2;
  repeated string tags = 3;
}

message PublishIdea {
  string id = 1;
  string userId = 2;
}

  message DeleteIdea {
  string id = 1;
  string userId = 2;
}

message GetIdeaById {
  string id = 1;
  optional string userId = 2;
}

message IdeaWithDetails {
  string id = 1;
  string userId = 2;
  string title = 3;
  string description = 4;
  repeated string tags = 5;
  string createdAt = 6;
  string publishedAt = 7;
  string deletedAt = 8;
}

message GetEvents {
  int32 from = 1;
}

message IdeaEvents {
  repeated IdeaEvent events = 1;
}

message IdeaEvent {
  string id = 1;
  string streamId = 2;
  int32 version = 3;
  string name = 4;
  string insertedAt = 5;
  int32 sequence = 6;
  IdeaEventData data = 7;
}

message IdeaEventData {
  oneof data {
    IdeaCreatedEvent created = 1;
    IdeaRenamed renamed = 2;
    IdeaDescriptionEdited descriptionEdited = 3;
    IdeaTagsAdded tagsAdded = 4;
    IdeaTagsRemoved tagsRemoved = 5;
    IdeaPublished published = 6;
    IdeaDeleted deleted = 7;
  }
}

message IdeaCreatedEvent {
  string id = 1;
  string userId = 2;
  string createdAt = 3;
}

message IdeaRenamed {
  string id = 1;
  string title = 2;
}

message IdeaDescriptionEdited {
  string id = 1;
  string description = 2;
}

message IdeaTagsAdded {
  string id = 1;
  repeated string tags = 2;
}

message IdeaTagsRemoved {
  string id = 1;
  repeated string tags = 2;
}

message IdeaPublished {
  string id = 1;
  string publishedAt = 2;
}

message IdeaDeleted {
  string id = 1;
  string deletedAt = 2;
}
