load("@npm_bazel_typescript//:index.bzl", "ts_devserver", "ts_library")
load("@npm//html-insert-assets:index.bzl", "html_insert_assets")
load("@build_bazel_rules_nodejs//:index.bzl", "pkg_web")
load("@npm_bazel_rollup//:index.bzl", "rollup_bundle")
load("@npm//history-server:index.bzl", "history_server")
load("@npm_bazel_terser//:index.bzl", "terser_minified")
load("@io_bazel_rules_docker//nodejs:image.bzl", "nodejs_image")
load("@k8s_deploy//:defaults.bzl", "k8s_deploy")

package(default_visibility = ["//:__subpackages__"])

exports_files(["tsconfig.json"])

inserted_assets = ["@npm//:node_modules/zone.js/dist/zone.min.js"]

static_assets = [":_index.html"] + inserted_assets

ts_library(
    name = "dev_src",
    srcs = ["main.dev.ts"],
    tsconfig = "//services/admin-client:tsconfig.json",
    use_angular_plugin = True,
    deps = [
        "//services/admin-client/app:dev",
        "@npm//@angular/compiler-cli",
        "@npm//@angular/platform-browser",
    ],
)

html_insert_assets(
    name = "dev_html",
    outs = ["index.html"],
    args = [
        "--html=$(execpath :_index.html)",
        "--out=$@",
        "--roots=. $(RULEDIR)",
        "--assets",
    ] + ["$(execpath %s)" % s for s in inserted_assets] + ["./_/ts_scripts.js"],
    data = static_assets,
)

ts_devserver(
    name = "live_server",
    entry_module = "cents_ideas/services/admin-client/main.dev",
    scripts = [
        "@npm//:node_modules/tslib/tslib.js",
        "//packages/angular-bazel:rxjs_umd_modules",
    ],
    static_files = [
        ":dev_html",
        "@npm//:node_modules/zone.js/dist/zone.min.js",
    ],
    deps = [":dev_src"],
)

ts_library(
    name = "prod_src",
    srcs = ["main.prod.ts"],
    tsconfig = "//services/admin-client:tsconfig.json",
    use_angular_plugin = True,
    deps = [
        "//services/admin-client/app:prod",
        "@npm//@angular/compiler-cli",
        "@npm//@angular/core",
        "@npm//@angular/platform-browser",
        "@npm//@angular/router",
    ],
)

rollup_bundle(
    name = "bundle",
    config_file = "rollup.config.js",
    entry_points = {
        ":main.prod.ts": "index.es2015",
    },
    output_dir = True,
    deps = [
        ":prod_src",
        "@npm//rollup-plugin-commonjs",
        "@npm//rollup-plugin-node-resolve",
    ],
)

terser_minified(
    name = "bundle.min",
    src = ":bundle",
)

html_insert_assets(
    name = "prod_html",
    outs = ["_prod_app/services/admin-client/index.html"],
    args = [
        "--html=$(execpath :_index.html)",
        "--out=$@",
        "--roots=. $(RULEDIR)",
        "--assets",
    ] + ["$(execpath %s)" % s for s in inserted_assets] + ["$(execpath %s)/index.es2015.js" % ":bundle.min"],
    data = [":bundle.min"] + static_assets,
)

pkg_web(
    name = "prod_app",
    srcs = inserted_assets + [
        ":prod_html",
        ":favicon.ico",
        ":bundle.min",
    ],
)

history_server(
    name = "prod_server",
    data = [":prod_app"],
    templated_args = ["-a $$(rlocation $(rootpath :prod_app))"],
)

nodejs_image(
    name = "nodejs_image",
    data = [":prod_app"],
    entry_point = "@npm//:node_modules/history-server/modules/cli.js",
    node_modules = "@npm//:node_modules",
    tags = ["local"],
    templated_args = ["services/admin-client/prod_app"],
)

k8s_deploy(
    name = "k8s",
    images = {
        "admin-client:placeholder_name": ":nodejs_image",
    },
    template = ":admin-client.yaml",
)
