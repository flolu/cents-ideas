load("@io_bazel_rules_sass//:defs.bzl", "sass_binary")
load("@npm_bazel_typescript//:index.bzl", "ts_library")

package(default_visibility = ["//:__subpackages__"])

sass_binary(
    name = "app_styles",
    src = "app.component.sass",
)

ts_library(
    name = "base_store",
    srcs = [
        "app.selectors.ts",
        "app-base.store.module.ts",
        "custom-route-serializer.ts",
        "ngrx-state-transfer.service.ts",
    ],
    tsconfig = "//services/client:tsconfig.json",
    use_angular_plugin = True,
    deps = [
        "//packages/enums",
        "@npm//@angular/common",
        "@npm//@angular/compiler-cli",
        "@npm//@angular/core",
        "@npm//@angular/platform-browser",
        "@npm//@angular/router",
        "@npm//@ngrx/effects",
        "@npm//@ngrx/router-store",
        "@npm//@ngrx/store",
        "@npm//@types/node",
        "@npm//rxjs",
    ],
)

ts_library(
    name = "base_app",
    srcs = [
        "app.component.ts",
        "app-base.module.ts",
        "app-routing.module.ts",
        "auth-token.interceptor.ts",
    ],
    angular_assets = [":app_styles"],
    tsconfig = "//services/client:tsconfig.json",
    use_angular_plugin = True,
    deps = [
        "//packages/enums",
        "//services/client/src/app/auth",
        "//services/client/src/app/auth:store",
        "//services/client/src/app/ideas",
        "//services/client/src/app/user",
        "//services/client/src/shared/environment",
        "@npm//@angular/common",
        "@npm//@angular/core",
        "@npm//@angular/platform-browser",
        "@npm//@angular/router",
        "@npm//@angular/service-worker",
        "@npm//@ngrx/store",
        "@npm//rxjs",
    ],
)

ts_library(
    name = "dev_store",
    srcs = ["app-dev.store.module.ts"],
    tsconfig = "//services/client:tsconfig.json",
    use_angular_plugin = True,
    deps = [
        ":base_store",
        "//services/client/src/shared/environment",
        "@npm//@angular/core",
        "@npm//@ngrx/store-devtools",
    ],
)

ts_library(
    name = "dev_app",
    srcs = ["app-dev.module.ts"],
    tsconfig = "//services/client:tsconfig.json",
    use_angular_plugin = True,
    deps = [
        ":base_app",
        ":dev_store",
        "//services/client/src/shared/environment",
        "@npm//@angular/core",
        "@npm//@angular/service-worker",
    ],
)

ts_library(
    name = "prod_app",
    srcs = ["app-prod.module.ts"],
    tsconfig = "//services/client:tsconfig.json",
    use_angular_plugin = True,
    deps = [
        ":base_app",
        ":base_store",
        "//services/client/src/shared/environment",
        "@npm//@angular/common",
        "@npm//@angular/core",
        "@npm//@angular/service-worker",
    ],
)

ts_library(
    name = "server",
    srcs = ["app.server.module.ts"],
    tsconfig = "//services/client:tsconfig-server",
    use_angular_plugin = True,
    deps = [
        ":base_app",
        ":prod_app",
        "@npm//@angular/core",
        "@npm//@angular/platform-server",
    ],
)
