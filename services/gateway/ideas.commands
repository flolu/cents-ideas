import * as express from 'express';
import {
  interfaces,
  controller,
  httpGet,
  httpPost,
  httpDelete,
  request,
  queryParam,
  response,
  requestParam,
} from 'inversify-express-utils';
import { injectable, inject } from 'inversify';

@controller('/ideas/commands')
export class IdeaCommands {
  messageBroker: any;

  @httpPost('/create')
  private async create(req: express.Request, res: express.Response, next: express.NextFunction) {
    // TODO goal:

    // 1. collect necessary data from request
    // maybe this type is always any... because validation is done in service
    const payload: any = { ...req.body /*...other stuff**/ };

    // 2. send request to service(s) with unvalidated payload
    const response = await this.messageBroker.request(`ideas/commands/create`, payload);

    // 3. handle http response stuff with response from service(s)
    if (response.ok) {
      // handle success response

      res.json(response.data);
    } else {
      // handle error response

      res.status(400).send('error');
    }
  }
}
