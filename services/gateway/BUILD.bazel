load("@npm_bazel_typescript//:index.bzl", "ts_library")
load("@io_bazel_rules_docker//nodejs:image.bzl", "nodejs_image")
load("@k8s_deploy//:defaults.bzl", "k8s_deploy")
load("//:config.bzl", "CONTAINER_REGISTRY")

package(default_visibility = ["//visibility:public"])

ts_library(
    name = "lib",
    srcs = glob(
        include = ["**/*.ts"],
        exclude = ["**/*.spec.ts"],
    ),
    deps = [
        "//packages/enums:lib",
        "//packages/models:lib",
        "//packages/utils:lib",
        "@npm//@types/body-parser",
        "@npm//@types/cors",
        "@npm//@types/express",
        "@npm//@types/jsonwebtoken",
        "@npm//axios",
        "@npm//body-parser",
        "@npm//cors",
        "@npm//express",
        "@npm//inversify",
        "@npm//jsonwebtoken",
        "@npm//module-alias",
        "@npm//reflect-metadata",
    ],
)

nodejs_image(
    name = "image",
    data = [
        ":lib",
        "//:package.json",
    ],
    entry_point = ":index.ts",
)

k8s_deploy(
    name = "k8s",
    images = {
        "gateway:placeholder_name": ":image",
    },
    template = ":gateway.yaml",
)
