# FIXME research integration testing (maybe with docker-compose or microk8s)

version: "3"
services:
  elasticsearch:
    container_name: elasticsearch
    image: elasticsearch:7.8.0
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300
    logging:
      driver: none

  zookeeper:
    container_name: zookeeper
    image: zookeeper
    ports:
      - 2181:2181
    environment:
      - ZOO_LOG4J_PROP=WARN
  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka
    ports:
      - 9092:9092
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    logging:
      driver: none
    depends_on:
      - zookeeper

  mongo-database:
    container_name: mongo-database
    image: mongo:4
    ports:
      - 27017:27017
    logging:
      driver: none

  gateway:
    container_name: gateway
    image: node:lts-alpine
    working_dir: /
    volumes:
      - ./package.json:/package.json
      - ./tsconfig.json:/tsconfig.json
      - ./services/gateway:/services/gateway
      - ./packages:/packages
      - ./node_modules:/node_modules
    env_file: env/.docker-compose.env
    command: yarn run ts-node-dev services/gateway --colors --transpileOnly --debounce 1500
    ports:
      - 3000:3000

  idea:
    container_name: idea
    image: node:lts-alpine
    working_dir: /
    volumes:
      - ./package.json:/package.json
      - ./tsconfig.json:/tsconfig.json
      - ./services/idea:/services/idea
      - ./packages:/packages
      - ./node_modules:/node_modules
    env_file: env/.docker-compose.env
    command: yarn run ts-node-dev services/idea --colors --transpileOnly --debounce 1500
    depends_on:
      - kafka
  idea-read:
    container_name: idea-read
    image: node:lts-alpine
    working_dir: /
    volumes:
      - ./package.json:/package.json
      - ./tsconfig.json:/tsconfig.json
      - ./services/idea-read:/services/idea-read
      - ./packages:/packages
      - ./node_modules:/node_modules
    env_file: env/.docker-compose.env
    command: yarn run ts-node-dev services/idea-read --colors --transpileOnly --debounce 1500
    depends_on:
      - kafka
      - idea

  authentication:
    container_name: authentication
    image: node:lts-alpine
    working_dir: /
    volumes:
      - ./package.json:/package.json
      - ./tsconfig.json:/tsconfig.json
      - ./services/authentication:/services/authentication
      - ./packages:/packages
      - ./node_modules:/node_modules
    env_file: env/.docker-compose.env
    command: yarn run ts-node-dev services/authentication --colors --transpileOnly --debounce 1500
    depends_on:
      - kafka

  user:
    container_name: user
    image: node:lts-alpine
    working_dir: /
    volumes:
      - ./package.json:/package.json
      - ./tsconfig.json:/tsconfig.json
      - ./services/user:/services/user
      - ./packages:/packages
      - ./node_modules:/node_modules
    env_file: env/.docker-compose.env
    command: yarn run ts-node-dev services/user --colors --transpileOnly --debounce 1500
    depends_on:
      - kafka
  user-read:
    container_name: user-read
    image: node:lts-alpine
    working_dir: /
    volumes:
      - ./package.json:/package.json
      - ./tsconfig.json:/tsconfig.json
      - ./services/user-read:/services/user-read
      - ./packages:/packages
      - ./node_modules:/node_modules
    env_file: env/.docker-compose.env
    command: yarn run ts-node-dev services/user-read --colors --transpileOnly --debounce 1500
    depends_on:
      - kafka
      - user

  review:
    container_name: review
    image: node:lts-alpine
    working_dir: /
    volumes:
      - ./package.json:/package.json
      - ./tsconfig.json:/tsconfig.json
      - ./services/review:/services/review
      - ./packages:/packages
      - ./node_modules:/node_modules
    env_file: env/.docker-compose.env
    command: yarn run ts-node-dev services/review --colors --transpileOnly --debounce 1500
    depends_on:
      - kafka
  review-read:
    container_name: review-read
    image: node:lts-alpine
    working_dir: /
    volumes:
      - ./package.json:/package.json
      - ./tsconfig.json:/tsconfig.json
      - ./services/review-read:/services/review-read
      - ./packages:/packages
      - ./node_modules:/node_modules
    env_file: env/.docker-compose.env
    command: yarn run ts-node-dev services/review-read --colors --transpileOnly --debounce 1500
    depends_on:
      - kafka
      - review

  mailing:
    container_name: mailing
    image: node:lts-alpine
    working_dir: /
    volumes:
      - ./package.json:/package.json
      - ./tsconfig.json:/tsconfig.json
      - ./services/mailing:/services/mailing
      - ./packages:/packages
      - ./node_modules:/node_modules
    env_file: env/.docker-compose.env
    command: yarn run ts-node-dev services/mailing --colors --transpileOnly --debounce 1500
    depends_on:
      - kafka

  search:
    container_name: search
    image: node:lts-alpine
    working_dir: /
    volumes:
      - ./package.json:/package.json
      - ./tsconfig.json:/tsconfig.json
      - ./services/search:/services/search
      - ./packages:/packages
      - ./node_modules:/node_modules
    env_file: env/.docker-compose.env
    command: yarn run ts-node-dev services/search --colors --transpileOnly --debounce 1500
    depends_on:
      - kafka
      - elasticsearch

  admin:
    container_name: admin
    image: node:lts-alpine
    working_dir: /
    volumes:
      - ./package.json:/package.json
      - ./tsconfig.json:/tsconfig.json
      - ./services/admin:/services/admin
      - ./packages:/packages
      - ./node_modules:/node_modules
    env_file: env/.docker-compose.env
    command: yarn run ts-node-dev services/admin --colors --transpileOnly --debounce 1500
    depends_on:
      - kafka

volumes:
  elasticsearch-data:
    driver: local
